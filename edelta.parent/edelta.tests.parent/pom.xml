<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.github.lorenzobettini.edelta</groupId>
    <artifactId>edelta.parent</artifactId>
    <version>2.3.2-SNAPSHOT</version>
  </parent>
  <artifactId>edelta.tests.parent</artifactId>
  <packaging>pom</packaging>

  <build>
    <plugins>
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>target-platform-configuration</artifactId>
        <configuration>
          <filters>
            <!--
              See https://bugs.eclipse.org/bugs/show_bug.cgi?id=569949
              We need to restrict Jupiter to version 5.6, otherwise, when
              building with platform 2020-12 we'll take Jupiter 5.7:
              the new abstract method is introduced
              org.junit.jupiter.api.extension.ExtensionContext.Store
                .getOrComputeIfAbsent(K, Function<K, V>, Class<V>)
              and since Tycho surefire only supports Jupiter 5.6 we'll get this error
              when using @ParameterizedTest:
              java.lang.AbstractMethodError:
              Receiver class org.junit.jupiter.engine.descriptor.TestTemplateExtensionContext
              does not define or inherit an implementation of the resolved method
              'abstract java.util.Optional getConfigurationParameter(java.lang.String, java.util.function.Function)'
              of interface org.junit.jupiter.api.extension.ExtensionContext.
              -->
            <filter>
              <type>eclipse-plugin</type>
              <id>org.junit.jupiter.api</id>
              <restrictTo>
                <versionRange>[5.6,5.7)</versionRange>
              </restrictTo>
            </filter>
          </filters>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- We enable jacoco-maven-plugin, already configured in the parent,
        and run tests with JaCoCo, by setting additionalTestArguments,
        passed to tycho-surefire (as configured in the parent) -->
      <id>jacoco</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <!-- tycho.testArgLine is where jacoco stores the agent path -->
        <additionalTestArguments>${tycho.testArgLine}</additionalTestArguments>
      </properties>
      <build>
        <plugins>
          <!-- configured in <pluginManagement> -->
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
