import com.example1.Example1

// IMPORTANT: ecores must be in a source directory
// otherwise you can't refer to them

package com.example2

// import existing metamodels
metamodel "myecore2"
metamodel "ecore" // this one should usually be there

use Example1 as example1

// specify modifications of an EPackage
modifyEcore someModifications epackage myecore2 {
	// the currently modified package is available
	// through the implicit parameter 'it', similar to 'this'	

	// use the standard Edelta library functions
	addNewEClass("NewClass") [
		// initialize it in a lambda block
		// where the new class is available through the implicit parameter 'it'
		addNewEAttribute("myStringAttribute", ecoreref(EString))
		// references to Ecore elements can be fully qualified
		addNewEReference("myReference", ecoreref(myecore2.MyEClass)) [
			// initialization as above
			// the current element is available through the implicit parameter 'it'
			// use syntactic sugar for setters
			upperBound = -1;
			containment = true;
			lowerBound = 0
		]
	]
}
// you can have several modification blocks for the same EPackage
modifyEcore otherModifications epackage myecore2 {
	// you can call the reusable functions you defined
	addEClass(example1.myReusableCreateSubclassOfMyEClass("ASubclassOfMyEClass"))
	// remember you can use the 'with' operator
	addEClass(example1.myReusableCreateSubclassOfMyEClass("AnotherSubclassOfMyEClass") => [
		// and refer to new classes you created in previous modification blocks
		ESuperTypes += ecoreref(NewClass)
	])
}