<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>edelta</groupId>
    <artifactId>edelta.parent</artifactId>
    <version>0.5.0-SNAPSHOT</version>
  </parent>
  <artifactId>edelta.product.repository</artifactId>
  <packaging>eclipse-repository</packaging>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-clean-plugin
                    </artifactId>
                    <versionRange>
                      [2.5,)
                    </versionRange>
                    <goals>
                      <goal>clean</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <!-- Just to test locally the building of a product -->
      <id>build-ide</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.eclipse.tycho</groupId>
            <artifactId>tycho-p2-director-plugin</artifactId>
            <version>${tycho-version}</version>
            <executions>
              <execution>
                <id>materialize-products</id>
                <goals>
                  <goal>materialize-products</goal>
                </goals>
              </execution>
              <execution>
                <id>archive-products</id>
                <goals>
                  <goal>archive-products</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <products>
                <product>
                  <id>edelta.eclipse.ide.product</id>
                  <archiveFileName>edelta-ide-${unqualifiedVersion}-${buildQualifier}</archiveFileName>
                  <!-- The path where the installed product shall be stored in the archive -->
                  <rootFolder>edelta</rootFolder>
                </product>
              </products>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release-ide-composite</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.eclipse.tycho</groupId>
            <artifactId>tycho-p2-repository-plugin</artifactId>
            <version>${tycho-version}</version>
            <configuration>
              <finalName>${project.artifactId}-${qualifiedVersion}</finalName>
            </configuration>
          </plugin>

          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${maven-antrun-plugin.version}</version>
            <executions>
              <execution>
                <!-- Retrieve possibly existing remote composite metadata -->
                <id>update-local-repository</id>
                <phase>prepare-package</phase>
                <configuration>
                  <target>
                    <ant antfile="${ant-files-path}/bintray.ant"
                      target="get-composite-metadata">
                    </ant>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>

              <execution>
                <!-- Deploy p2 repository, p2 composite updated metadata 
                  but not zipped p2 repository -->
                <id>deploy-repository</id>
                <phase>verify</phase>
                <configuration>
                  <target>
                    <ant antfile="${ant-files-path}/bintray.ant"
                      target="push-ide-to-bintray">
                    </ant>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.eclipse.tycho.extras</groupId>
            <artifactId>tycho-eclipserun-plugin</artifactId>
            <version>${tycho-version}</version>
            <configuration>
              <repositories>
                <repository>
                  <id>mars</id>
                  <layout>p2</layout>
                  <url>http://download.eclipse.org/releases/oxygen</url>
                </repository>
              </repositories>
              <dependencies>
                <dependency>
                  <artifactId>org.eclipse.ant.core</artifactId>
                  <type>eclipse-plugin</type>
                </dependency>
                <dependency>
                  <artifactId>org.apache.ant</artifactId>
                  <type>eclipse-plugin</type>
                </dependency>
                <dependency>
                  <artifactId>org.eclipse.equinox.p2.repository.tools</artifactId>
                  <type>eclipse-plugin</type>
                </dependency>
                <dependency>
                  <artifactId>org.eclipse.equinox.p2.core.feature</artifactId>
                  <type>eclipse-feature</type>
                </dependency>
                <dependency>
                  <artifactId>org.eclipse.equinox.p2.extras.feature</artifactId>
                  <type>eclipse-feature</type>
                </dependency>
                <dependency>
                  <artifactId>org.eclipse.equinox.ds</artifactId>
                  <type>eclipse-plugin</type>
                </dependency>
              </dependencies>
            </configuration>
            <executions>
              <!-- First add composite of required software update sites... 
                (if already present they won't be added again) -->
              <execution>
                <id>add-xtext-repository</id>
                <phase>package</phase>
                <goals>
                  <goal>eclipse-run</goal>
                </goals>
                <configuration>
                  <applicationsArgs>
                    <args>-application</args>
                    <args>org.eclipse.ant.core.antRunner</args>
                    <args>-buildfile</args>
                    <args>${ant-files-path}/packaging-p2composite.ant</args>
                    <args>p2.composite.add.external</args>
                    <args>-Dsite.label="${site.label}"</args>
                    <args>-Dcomposite.base.dir=${project.build.directory}</args>
                    <args>-DunqualifiedVersion=${unqualifiedVersion}</args>
                    <args>-DbuildQualifier=${buildQualifier}</args>
                    <args>-Dchild.repo="http://download.eclipse.org/modeling/tmf/xtext/updates/releases/${xtextVersion}/"</args>
                  </applicationsArgs>
                </configuration>
              </execution>
              <execution>
                <id>add-eclipse-repository</id>
                <phase>package</phase>
                <goals>
                  <goal>eclipse-run</goal>
                </goals>
                <configuration>
                  <applicationsArgs>
                    <args>-application</args>
                    <args>org.eclipse.ant.core.antRunner</args>
                    <args>-buildfile</args>
                    <args>${ant-files-path}/packaging-p2composite.ant</args>
                    <args>p2.composite.add.external</args>
                    <args>-Dsite.label="${site.label}"</args>
                    <args>-Dcomposite.base.dir=${project.build.directory}</args>
                    <args>-DunqualifiedVersion=${unqualifiedVersion}</args>
                    <args>-DbuildQualifier=${buildQualifier}</args>
                    <args>-Dchild.repo="http://download.eclipse.org/releases/${eclipseVersion}/"</args>
                  </applicationsArgs>
                </configuration>
              </execution>
              <!-- ... then add our new child repository -->
              <execution>
                <id>add-p2-composite-repository</id>
                <phase>package</phase>
                <goals>
                  <goal>eclipse-run</goal>
                </goals>
                <configuration>
                  <applicationsArgs>
                    <args>-application</args>
                    <args>org.eclipse.ant.core.antRunner</args>
                    <args>-buildfile</args>
                    <args>${ant-files-path}/packaging-p2composite.ant</args>
                    <args>p2.composite.add</args>
                    <args>-Dsite.label="${site.label}"</args>
                    <args>-Dcomposite.base.dir=${project.build.directory}</args>
                    <args>-DunqualifiedVersion=${unqualifiedVersion}</args>
                    <args>-DbuildQualifier=${buildQualifier}</args>
                    <args>-Dchild.repository.path.prefix="${child.repository.path.prefix}"</args>
                  </applicationsArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>deploy-ide-composite</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.eclipse.tycho</groupId>
            <artifactId>tycho-p2-director-plugin</artifactId>
            <version>${tycho-version}</version>
            <executions>
              <execution>
                <id>materialize-products</id>
                <goals>
                  <goal>materialize-products</goal>
                </goals>
              </execution>
              <execution>
                <id>archive-products</id>
                <goals>
                  <goal>archive-products</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <products>
                <product>
                  <id>edelta.eclipse.ide.product</id>
                  <archiveFileName>edelta-ide-${unqualifiedVersion}-${buildQualifier}</archiveFileName>
                  <!-- The path where the installed product shall be stored in the archive -->
                  <rootFolder>edelta</rootFolder>
                </product>
              </products>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${maven-antrun-plugin.version}</version>
            <!-- copying zipped products -->
            <executions>
              <execution>
                <id>deploy-ides</id>
                <phase>verify</phase>
                <configuration>
                  <target>
                    <ant antfile="${ant-files-path}/rsync.ant" 
                          target="rsync-copy-dir-contents">
                      <property name="rsync.remote.dir" value="${remote.dir}/products/${unqualifiedVersion}/"/>
                      <property name="rsync.local.dir" value="${project.build.directory}/products/"/>
                    </ant>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
  </dependencies>
</project>
