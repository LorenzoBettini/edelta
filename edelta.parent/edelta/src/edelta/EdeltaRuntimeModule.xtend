/*
 * generated by Xtext 2.10.0
 */
package edelta

import edelta.compiler.EdeltaGeneratorConfigProvider
import edelta.compiler.EdeltaOutputConfigurationProvider
import edelta.compiler.EdeltaXbaseCompiler
import edelta.interpreter.EdeltaInterpreter
import edelta.interpreter.EdeltaSafeInterpreter
import edelta.resource.EdeltaDerivedStateComputer
import edelta.resource.EdeltaResourceDescriptionStrategy
import edelta.scoping.EdeltaImplicitlyImportedFeatures
import edelta.scoping.EdeltaQualifiedNameProvider
import edelta.typesystem.EdeltaTypeComputer
import edelta.validation.EdeltaDiagnosticConverter
import org.eclipse.xtext.generator.IContextualOutputConfigurationProvider
import org.eclipse.xtext.generator.IOutputConfigurationProvider
import org.eclipse.xtext.validation.IDiagnosticConverter
import org.eclipse.xtext.xbase.compiler.IGeneratorConfigProvider
import org.eclipse.xtext.xbase.compiler.XbaseCompiler
import org.eclipse.xtext.xbase.scoping.batch.ImplicitlyImportedFeatures

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class EdeltaRuntimeModule extends AbstractEdeltaRuntimeModule {

	override bindIQualifiedNameProvider() {
		EdeltaQualifiedNameProvider
	}

	override bindITypeComputer() {
		EdeltaTypeComputer
	}

	override bindIDerivedStateComputer() {
		EdeltaDerivedStateComputer
	}

	override bindIDefaultResourceDescriptionStrategy() {
		EdeltaResourceDescriptionStrategy
	}

	def Class<? extends XbaseCompiler> bindXbaseCompiler() {
		EdeltaXbaseCompiler
	}

	def Class<? extends EdeltaInterpreter> bindEdeltaInterpreter() {
		EdeltaSafeInterpreter
	}

	def Class<? extends IDiagnosticConverter> bindIDiagnosticConverter() {
		return EdeltaDiagnosticConverter
	}

	def Class<? extends IGeneratorConfigProvider> bindIGeneratorConfigProvider() {
		EdeltaGeneratorConfigProvider
	}

	def Class<? extends IOutputConfigurationProvider> bindIOutputConfigurationProvider() {
		return EdeltaOutputConfigurationProvider
	}

	def Class<? extends IContextualOutputConfigurationProvider> bindIContextualOutputConfigurationProvider() {
		return EdeltaOutputConfigurationProvider
	}

	def Class<? extends ImplicitlyImportedFeatures> bindImplicitlyImportedFeatures() {
		return EdeltaImplicitlyImportedFeatures
	}
}
