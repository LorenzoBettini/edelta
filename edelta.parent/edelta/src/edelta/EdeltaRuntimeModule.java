/**
 * generated by Xtext 2.10.0
 */
package edelta;

import org.eclipse.xtext.generator.IContextualOutputConfigurationProvider;
import org.eclipse.xtext.generator.IOutputConfigurationProvider;
import org.eclipse.xtext.linking.ILinkingService;
import org.eclipse.xtext.naming.IQualifiedNameProvider;
import org.eclipse.xtext.resource.IDefaultResourceDescriptionStrategy;
import org.eclipse.xtext.resource.IDerivedStateComputer;
import org.eclipse.xtext.validation.IDiagnosticConverter;
import org.eclipse.xtext.xbase.compiler.IGeneratorConfigProvider;
import org.eclipse.xtext.xbase.compiler.XbaseCompiler;
import org.eclipse.xtext.xbase.scoping.batch.ImplicitlyImportedFeatures;
import org.eclipse.xtext.xbase.typesystem.computation.ITypeComputer;

import edelta.compiler.EdeltaGeneratorConfigProvider;
import edelta.compiler.EdeltaOutputConfigurationProvider;
import edelta.compiler.EdeltaXbaseCompiler;
import edelta.interpreter.EdeltaInterpreter;
import edelta.interpreter.EdeltaInterpreterFactory;
import edelta.interpreter.EdeltaSafeInterpreter;
import edelta.linking.EdeltaLinkingService;
import edelta.resource.EdeltaDerivedStateComputer;
import edelta.resource.EdeltaResourceDescriptionStrategy;
import edelta.scoping.EdeltaImplicitlyImportedFeatures;
import edelta.scoping.EdeltaQualifiedNameProvider;
import edelta.typesystem.EdeltaTypeComputer;
import edelta.validation.EdeltaDiagnosticConverter;

/**
 * Use this class to register components to be used at runtime / without the
 * Equinox extension registry.
 */
public class EdeltaRuntimeModule extends AbstractEdeltaRuntimeModule {

	public Class<? extends EdeltaInterpreterFactory> bindEdeltaInterpreterFactory() {
		return EdeltaInterpreterFactory.class;
	}

	@Override
	public Class<? extends IQualifiedNameProvider> bindIQualifiedNameProvider() {
		return EdeltaQualifiedNameProvider.class;
	}

	@Override
	public Class<? extends ITypeComputer> bindITypeComputer() {
		return EdeltaTypeComputer.class;
	}

	@Override
	public Class<? extends IDerivedStateComputer> bindIDerivedStateComputer() {
		return EdeltaDerivedStateComputer.class;
	}

	@Override
	public Class<? extends IDefaultResourceDescriptionStrategy> bindIDefaultResourceDescriptionStrategy() {
		return EdeltaResourceDescriptionStrategy.class;
	}

	public Class<? extends XbaseCompiler> bindXbaseCompiler() {
		return EdeltaXbaseCompiler.class;
	}

	public Class<? extends EdeltaInterpreter> bindEdeltaInterpreter() {
		return EdeltaSafeInterpreter.class;
	}

	public Class<? extends IDiagnosticConverter> bindIDiagnosticConverter() {
		return EdeltaDiagnosticConverter.class;
	}

	public Class<? extends IGeneratorConfigProvider> bindIGeneratorConfigProvider() {
		return EdeltaGeneratorConfigProvider.class;
	}

	public Class<? extends IOutputConfigurationProvider> bindIOutputConfigurationProvider() {
		return EdeltaOutputConfigurationProvider.class;
	}

	public Class<? extends IContextualOutputConfigurationProvider> bindIContextualOutputConfigurationProvider() {
		return EdeltaOutputConfigurationProvider.class;
	}

	public Class<? extends ImplicitlyImportedFeatures> bindImplicitlyImportedFeatures() {
		return EdeltaImplicitlyImportedFeatures.class;
	}

	@Override
	public Class<? extends ILinkingService> bindILinkingService() {
		return EdeltaLinkingService.class;
	}
}
