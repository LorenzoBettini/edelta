# This workflow will build a Java project with Maven
# This runs only when a PR is merged, to create or update the cache
# This is useful because the builds on Windows and MacOS are triggered
# only on PR, so, for new branches, the cache is always empty, since
# the builds on PR will not update the cache on the master branch.
# This workflow will update the cache for Windows and MacOS on the master branch
# when the PR is merged (actually it will update on the base branch of a merged PR).
# The build consists in a Maven run but skipping tests.
# The Maven build is run only if we did not have a cache hit.

name: Update Cache on Windows and MacOS

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:    
      # Push events on the main branch
      - master
      # Push events to branches matching
      - experiments*
      # Push events to branches matching
      - task*

jobs:
  build:
    if: contains(github.event.head_commit.message, 'Merge pull request')
    strategy:
      matrix:
        os: ['macos-latest', 'windows-latest']
      fail-fast: false
    runs-on: ${{ matrix.os }}
# not required anymore, thanks to Guice 5
#    env:
#      MAVEN_OPTS: --add-opens java.base/java.lang=ALL-UNNAMED

    steps:
    - uses: actions/checkout@v4.2.2
    - name: Set up JDK
      uses: actions/setup-java@v4.7.0
      with:
        java-version: 21
        distribution: temurin
    - name: Cache Maven packages
      uses: actions/cache@v4
      id: m2cache # note the cache id, see below for cache-hit
      with:
        path: |
          ~/.m2
          ~/.sonar/cache
          !**/*edelta*
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.target', '**/maven-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Build with Maven
      run: ./mvnw -f edelta.parent/pom.xml clean verify '-Ptest-ide' -DskipTests
      if: steps.m2cache.outputs.cache-hit != 'true' # note the use of the id 'm2cache'
    - name: Archive Test Results
      uses: actions/upload-artifact@v4
      if: ${{ failure() || cancelled() }}
      with:
        name: test-results-${{ runner.os }}
        path: '**/*.tests/target/surefire-reports'
    - name: Archive UI Tests Screenshots
      uses: actions/upload-artifact@v4
      if: ${{ failure() || cancelled() }}
      with:
        name: screenshots-${{ runner.os }}
        path: '**/*.tests/screenshots'
    - name: Archive Logs
      uses: actions/upload-artifact@v4
      if: ${{ failure() || cancelled() }}
      with:
        name: logs-${{ runner.os }}
        path: '**/*.tests/target/**/*.log'
